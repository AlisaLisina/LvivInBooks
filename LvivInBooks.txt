create database LvivInBooks

go

use LvivInBooks

go

create table BOOKS
	(
	ID int identity (1,1) Primary key,
	Title nvarchar(500), 
	PubHouse nvarchar(200),
	Language nvarchar(200),
	Annotation nvarchar(max)
	)

	go

create table AUTHORS
	(
	ID int identity (1,1) Primary key,
	FirstName nvarchar(50), 
	LastName nvarchar(50) 

	)

	go

create table GENRES
	(
	ID int identity (1,1) Primary key,
	Name nvarchar(100) 
	)

	go

create table AUTHORS_BOOKS
	(
	ID int identity (1,1) Primary key,
	ARef int Foreign key references Authors(ID),
	BRef int Foreign key references Books(ID)
	)

go
	
create table GENRES_BOOKS
	(
	ID int identity (1,1) Primary key,
	GRef int Foreign key references Genre(ID),
	BRef int Foreign key references Books(ID)
	)

	go 


ALTER TABLE BOOKS
ALTER COLUMN Title nvarchar(100) NOT NULL; 

ALTER TABLE AUTHORS
ADD Nationality nvarchar (20);

ALTER TABLE AUTHORS
ADD CONSTRAINT Nationality 
DEFAULT 'Ukrainian' FOR Nationality;

ALTER TABLE AUTHORS   
   ADD CONSTRAINT CHK_FirstName_AUTHORS   
   CHECK (FirstName LIKE '_%');  
GO 
                      
ALTER TABLE AUTHORS   
   ADD CONSTRAINT CHK_LastName_AUTHORS   
   CHECK (LastName LIKE '_%' and LastName LIKE N'%[A-Я, а-я,Є,є,Ї,ї,І,і,'']');  
GO

ALTER TABLE GENRES
ADD UNIQUE (Name);

CREATE VIEW view_Love 
AS 
SELECT * FROM BOOKS
WHERE Annotation LIKE N'%кохання%';

SELECT * FROM view_Love
--
/*CREATE VIEW view_PopularAuthors -- вибирає найпродуктивнішого автора (х3 )
AS 
SELECT TOP 3 WITH TIES *
FROM AUTHORS 
WHERE AUTHORS.ID IN (
                     SELECT TOP 3 WITH TIES ARef
                     FROM AUTHORS_BOOKS
                     GROUP BY ARef
                     ORDER BY COUNT(BRef) DESC)
ORDER BY AUTHORS.LastName;

SELECT * FROM view_PopularAuthors*/
--
CREATE VIEW view_length -- вибирає аннотацію до 100 символів
AS
  SELECT Title, LEN(Annotation) as length
  FROM BOOKS
  WHERE LEN(Annotation) <=100;

SELECT * FROM view_length
-----------------------------CLUSTERED|NONCLUSTERED----------------------------------------------
CREATE VIEW v_clustered WITH SCHEMABINDING  
AS
  SELECT ID, Title, PubHouse, Language, Annotation
  FROM dbo.BOOKS
  WHERE Annotation LIKE N'%Львів%'

CREATE UNIQUE CLUSTERED INDEX books_indexed
ON v_clustered
             (Title,
              PubHouse
                      );
CREATE NONCLUSTERED INDEX books_nonclustered
ON v_clustered
              (ID,
              Language
              );

--------------------------------STORED PROCEDURES-----------------------------------------
CREATE PROC spTopAuthors --виклик 3 авторів з найбільшою кількістю книжок
AS 
  SELECT TOP 3 WITH TIES *
  FROM AUTHORS 
  WHERE AUTHORS.ID IN (
                       SELECT TOP 3 WITH TIES ARef
                       FROM AUTHORS_BOOKS
                       GROUP BY ARef
                       ORDER BY COUNT(BRef) DESC)
  ORDER BY AUTHORS.LastName;
GO

EXEC spTopAuthors;

/*CREATE PROC spNewAuthor
@FirstName nvarchar (50),
@LastName nvarchar (50)
AS
  IF EXIST (SELECT FirstName, LastName 
            FROM AUTHORS
            WHERE FirstName = @FirstName
              AND   LastName = @LastName)
            PRINT N'Такий автор вже є'
  ELSE 
  BEGIN 
   INSERT INTO AUTHORS
   VALUES (@FirstName, @LastName)
   PRINT N'Автор успішно доданий до бази'
  END*/

CREATE PROC dbo.spNewAuthor
@FirstName nvarchar (50),
@LastName nvarchar (50)
AS

BEGIN 
          
     INSERT INTO AUTHORS (FirstName, LastName)
     VALUES (@FirstName, @LastName)
END

EXEC dbo.spNewAuthor
     @FirstName = 'Аліса',
     @LastName = 'Лісіна'






